version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: crypto-exchange-db
    environment:
      POSTGRES_DB: crypto_exchange
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - crypto-exchange

  # Backend API
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: crypto-exchange-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/crypto_exchange
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - crypto-exchange
    volumes:
      - ./apps/backend:/app
      - /app/node_modules

  # Frontend Web App
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: crypto-exchange-frontend
    environment:
      NODE_ENV: production
      PORT: 3000
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - crypto-exchange

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: crypto-exchange-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crypto-exchange

  # Adminer (Database management tool)
  adminer:
    image: adminer:4
    container_name: crypto-exchange-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - crypto-exchange

volumes:
  postgres_data:
  redis_data:

networks:
  crypto-exchange:
    driver: bridge
